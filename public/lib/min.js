/ * ! (c) Andrea Giammarchi - ISC * /
! function (M, N, T) {"use estricto"; if (! N.get ("ungap-li") && typeof Reflect! = typeof E) {var E = "extend"; pruebe {var e = {} ; e [E] = "li"; var t = HTMLLIElement, n = function () {return Reflect.construct (t, [], n)}; if (n.prototype = T.create (t.prototype), N.define ("ungap-li", n, e),! / Is = "ungap-li" /. Test ((new n) .outerHTML)) throw {}} catch (e) {! Function () { var s = "attributeChangedCallback", n = "connectedCallback", r = "disconnectedCallback", l = T.assign, e = T.create, o = T.defineProperties, u = T.setPrototypeOf, c = N.define, t = N.get, i = N.upgrade, a = N.whenDefined, f = e (null), p = new WeakMap; new MutationObserver (function (e) {for (var t = 0, n = e.length; t <n; t ++) {for (var r = e [t], o = r.addedNodes, i = r.removedNodes, a = 0, l = o.length; a <l; a ++) w (o [a ]); para (a = 0, l = i.length; a <l; a ++) b (i [a])}}). observe (M, {childList:! 0, subtree:! 0}),A (Document.prototype, "importNode"), A (Node.prototype, "cloneNode"), o (N, {define: {value: function (e, t, n) {if (e = e.toLowerCase () , n && E en n) {f [e] = l ({}, n, {Clase: t}); para (var r = n [E] + '[is = "' + e + '"]', o = M.querySelectorAll (r), i = 0, a = o.length; i <a; i ++) w (o [i])} else c.apply (N, argumentos)}}, obtenga: {value: function ( e) {return e en f? f [e]. Clase: t.call (N, e)}}, actualización: {valor: función (e) {var t = h (e) ;! t || e instanceof t.Class? i.call (N, e): C (e, t)}}, whenDefined: {value: function (e) {return e in f? Promise.resolve (): a.call (N, e )}}}); var v = M.createElement; o (M, {createElement: {value: function (e, t) {var n = v.call (M, e); return t && "is" en t && ( n.setAttribute ("is", t.is), N.upgrade (n)), n}}}); var d = T.getOwnPropertyDescriptor (Element.prototype, "innerHTML"); función g (e) {para (var t = 0, n = e.length; t <n;t ++) {var r = e [t], o = r.attributeName, i = r.oldValue, a = r.target, l = a.getAttribute (o); s en a && (i! = l || null! = l) && a [s] (o, i, a.getAttribute (o), null)}} función b (e) {if (1 === e.nodeType) {var t = h (e); t && e instanceof t.Class && r en e && p.get (e)! == r && (p.set (e, r), Promise.resolve (e) .then (m)), L (e, b)}} función h (e) {var t = e.getAttribute ("is"); devuelve t && (t = t.toLowerCase ()) en f? f [t]: null} función y (e) {e [n] ()} función m ( e) {e [r] ()} función C (e, t) {var n = t.Class, r = n.observedAttributes || []; if (u (e, n.prototype), r.length) {new MutationObserver (g) .observe (e, {atributos:! 0, attributeFilter: r, attributeOldValue:! 0}); para (var o = [], i = 0, a = r.length; i <a; i ++) o.push ({attributeName: r [i], oldValue: null, target: e}); g (o)}} function w (e) {if (1 === e.nodeType) {var t = h (e); t && (e instancia de t.Class || C (e, t), n en e && e.isConnected && p.get (e)! == n && (p.set (e, n), Promise.resolve (e) .then (y))), L (e, w)}} function L (e, t) { para (var n = e.querySelectorAll ("[is]"), r = 0, o = n.length; r <o; r ++) t (n [r])} función A (e, t) {var n = e [t], r = {}; r [t] = {valor: función () {var e = n.aplicar (esto, argumentos); cambiar (e.nodeType) {caso 1: caso 11: L ( e.content || e, w)} return e}}, o (e, r)} o (Element.prototype, {innerHTML: {get: d.get, set: function (e) {d.set.call (this, e), / \ bis = ("| ')? [a-z0-9 _-] + \ 1 / i.test (e) && L (this.content || this, w)}}})} ()}}} (documento, elementos personalizados, objeto);w)} return e}}, o (e, r)} o (Element.prototype, {innerHTML: {get: d.get, set: function (e) {d.set.call (this, e), / \ bis = ("| ')? [a-z0-9 _-] + \ 1 / i.test (e) && L (this.content || this, w)}}})} ()}}} (documento , customElements, Object);w)} return e}}, o (e, r)} o (Element.prototype, {innerHTML: {get: d.get, set: function (e) {d.set.call (this, e), / \ bis = ("| ')? [a-z0-9 _-] + \ 1 / i.test (e) && L (this.content || this, w)}}})} ()}}} (documento , customElements, Object);
